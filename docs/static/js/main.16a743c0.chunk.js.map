{"version":3,"sources":["components/EachUser.js","components/Users.js","App.js","serviceWorker.js","index.js"],"names":["EachUser","className","this","props","user","name","email","age","gender","readOnly","type","checked","agreed","onClick","updateUser","bind","data-toggle","data-target","deleteUser","id","Component","Users","users","map","key","handleChange","App","state","userFullName","userEmail","userAge","userGender","tempid","editName","editEmail","editAge","editGender","e","setState","target","value","filter","validateInfo","flag","alert","test","addUser","preventDefault","length","addNewUser","console","log","editUser","updateInfo","index","findIndex","item","splice","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onChange","min","max","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16a743c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass EachUser extends Component {\n\n    render() {\n        return (\n            <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.user.name}</h5>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">e-Mail: {this.props.user.email}</li>\n                        <li className=\"list-group-item\">Age: {this.props.user.age}</li>\n                        <li className=\"list-group-item\">Gender: {this.props.user.gender}</li>\n                        <li className=\"list-group-item\">\n                            Agreed to T and C*\n                            <input readOnly className=\"float-right\" type=\"checkbox\" checked={this.props.user.agreed} />\n                        </li>\n                    </ul>\n                    <div className=\"card-footer\">\n                        <button onClick={this.props.updateUser.bind(this, this.props.user)} type=\"button\" className=\"btn btn-outline-primary btn-sm\" data-toggle=\"modal\" data-target=\"#exampleModalUpdate\">Update UserInfo</button>\n                        <button onClick={this.props.deleteUser.bind(this, this.props.user.id)} className=\"btn btn-outline-danger float-right btn-sm\" >Delete User</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EachUser;\n","import React, { Component } from 'react';\nimport EachUser from './EachUser';\n\nclass Users extends Component {\n    render() {\n        return (\n            <div className=\"row m-3\">\n                {this.props.users.map((user) =>\n                    <div className=\"col-md-3 mb-3\" key={user.id}>\n                        <EachUser className=\"card-deck\"\n                            user={user}\n                            deleteUser={this.props.deleteUser}\n                            handleChange={this.props.handleChange}\n                            updateUser={this.props.updateUser}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport Users from './components/Users';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    users: [\n      {\n        id: 1,\n        name: \"John Doe\",\n        email: \"johndoe@example.com\",\n        age: 23,\n        gender: \"Male\",\n        agreed: true\n      },\n      {\n        id: 2,\n        name: \"Carol R. Barlow\",\n        email: \"CarolRBarlow@armyspy.com\",\n        age: 72,\n        gender: \"Female\",\n        agreed: true\n      },\n      {\n        id: 3,\n        name: \"Robert S. Hicks\",\n        email: \"RobertSHicks@rhyta.com\",\n        age: 85,\n        gender: \"Male\",\n        agreed: true\n      },\n      {\n        id: 4,\n        name: \"Robert N. Rollins\",\n        email: \"RobertNRollins@teleworm.us\",\n        age: 81,\n        gender: \"Male\",\n        agreed: true\n      },\n    ],\n    userFullName: '',\n    userEmail: '',\n    userAge: 0,\n    userGender: \"Male\",\n\n    tempid: 0,\n    editName: '',\n    editEmail: '',\n    editAge: 0,\n    editGender: \"Male\"\n  }\n  //handleChange for managing state\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //delete user of that particular id which is clicked\n  deleteUser = (id) => {\n    this.setState({ users: this.state.users.filter(user => user.id !== id) });\n  }\n\n  //validate given information\n  validateInfo = (user) => {\n    let flag = 0;\n    //console.log(\"indise validate omfo\");\n    if (user.name == null) {\n      alert(\"Name can't be empty, please enter your Full Name...\");\n      flag++;\n      return false;\n    } else {\n      let regex = /^[a-zA-Z ]+$/;\n      if (!regex.test(user.name)) {\n        alert(\"Please enter valid name. e.g. John Doe.\");\n        flag++;\n        return false;\n      }\n    }\n\n    if (user.email == null) {\n      alert(\"e-Mail can't be empty, please enter your e-Mail ID...\");\n      flag++;\n      return false;\n    } else {\n      let regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (!regex.test(user.email)) {\n        alert(\"Please enter valid email. e.g. johndoe@example.com\");\n        flag++;\n        return false;\n      }\n    }\n    if (user.age == null) {\n      alert(\"Age can't be empty, please enter your age...\");\n      flag++;\n      return false;\n    } else {\n      if (user.age <= 13) {\n        alert(\"Age must be less greater than 13 & less then 85.\");\n        flag++;\n        return false;\n      }\n    }\n\n    if (user.gender === \"\") {\n      alert(\"Gender can't be empty, please enter your gender...\");\n      flag++;\n      return false;\n    } else {\n      if (user.gender !== \"Male\" && user.gender !== \"Female\" && user.gender !== \"Others\") {\n        alert(\"Gender must be Male or Female.\");\n        flag++;\n        return false;\n      }\n    }\n\n    if (flag === 0) {\n      return true;\n    }\n  }\n  //add user with appropriate information\n  addUser = (e) => {\n    e.preventDefault();\n    if (this.state.users.length === 0) {\n      const addNewUser = {\n        id: 1,\n        name: this.state.userFullName,\n        email: this.state.userEmail,\n        age: this.state.userAge,\n        gender: this.state.userGender,\n        agreed: true\n      }\n      if (this.validateInfo(addNewUser)) {\n        //console.log(\"in if created con\");\n        this.setState({ users: [...this.state.users, addNewUser] });\n        this.setState({\n          userFullName: \"\",\n          userEmail: \"\",\n          userAge: 0,\n          userGender: \"Male\"\n        });\n      } else {\n        console.log(\"User can't be added...\");\n      }\n    } else {\n      const addNewUser = {\n        id: this.state.users[this.state.users.length - 1].id + 1,\n        name: this.state.userFullName,\n        email: this.state.userEmail,\n        age: this.state.userAge,\n        gender: this.state.userGender,\n        agreed: true\n      }\n      if (this.validateInfo(addNewUser)) {\n        this.setState({ users: [...this.state.users, addNewUser] });\n        this.setState({\n          userFullName: \"\",\n          userEmail: \"\",\n          userAge: 0,\n          userGender: \"Male\"\n        });\n      } else {\n        console.log(\"User can't be added...\");\n      }\n    }\n  }\n\n  //update user info\n  updateUser = (editUser) => {\n    //console.log(editUser);\n    this.setState({\n      tempid: editUser.id,\n      editName: editUser.name,\n      editEmail: editUser.email,\n      editAge: editUser.age,\n      editGender: editUser.gender\n    });\n  }\n  updateInfo = (tempid) => {\n    //console.log(tempid);\n    let user =\n    {\n      id: tempid,\n      name: this.state.editName,\n      email: this.state.editEmail,\n      age: this.state.editAge,\n      gender: this.state.editGender,\n      agreed: true\n    }\n    if (this.validateInfo(user)) {\n      let index = this.state.users.findIndex((item) => item.id === tempid);\n      this.state.users.splice(index, 1, user);\n      this.setState(this.state);\n    } else {\n      console.log(\"user can't be added...\");\n    }\n    //console.log(user);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className=\"bg-dark text-light\">\n          <h3 className=\"text-center p-4\">CRUD React App</h3>\n        </div>\n        <button type=\"button\" className=\"btn-info text-light btn-block\" data-toggle=\"modal\" data-target=\"#exampleModal\">Create User</button>\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Enter user details:</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Full Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"recipient-name\" name=\"userFullName\" value={this.state.userFullName} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">e-Mail ID:</label>\n                    <input type=\"email\" className=\"form-control\" id=\"recipient-email\" name=\"userEmail\" value={this.state.userEmail} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Age:</label>\n                    <input type=\"number\" className=\"form-control\" id=\"recipient-age\" min=\"0\" max=\"99\" name=\"userAge\" value={this.state.userAge} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Gender: </label>\n                    <select className=\"ml-2\"\n                      value={this.state.userGender}\n                      onChange={this.handleChange}\n                      name=\"userGender\"\n                    >\n                      <option className=\"dropdown-item\" value=\"Male\">Male</option>\n                      <option className=\"dropdown-item\" value=\"Female\">Female</option>\n                      <option className=\"dropdown-item\" value=\"Others\">Others</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group ml-4\">\n                    <input readOnly={true} className=\"form-check-input\" type=\"checkbox\" checked={true} id=\"defaultCheck1\" name=\"tandc\" />\n                    <label className=\"form-check-label\">\n                      Agreed to T and C*\n                    </label>\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.addUser.bind(this)}>Add User</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"exampleModalUpdate\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Update UserInfo</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Full Name:</label>\n                    <input type=\"text\" className=\"form-control\" id=\"recipient-name-update\" name=\"editName\" value={this.state.editName} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">e-Mail ID:</label>\n                    <input type=\"email\" className=\"form-control\" id=\"recipient-email-update\" name=\"editEmail\" value={this.state.editEmail} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Age:</label>\n                    <input type=\"number\" className=\"form-control\" id=\"recipient-age-update\" min=\"0\" max=\"99\" name=\"editAge\" value={this.state.editAge} onChange={this.handleChange} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Gender: </label>\n                    <select className=\"ml-2\"\n                      value={this.state.editGender}\n                      onChange={this.handleChange}\n                      name=\"editGender\"\n                    >\n                      <option className=\"dropdown-item\" value=\"Male\">Male</option>\n                      <option className=\"dropdown-item\" value=\"Female\">Female</option>\n                      <option className=\"dropdown-item\" value=\"Others\">Others</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group ml-4\">\n                    <input readOnly={true} className=\"form-check-input\" type=\"checkbox\" checked={true} id=\"defaultCheck1-update\" name=\"tandc\" />\n                    <label className=\"form-check-label\">\n                      Agreed to T and C*\n                    </label>\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.updateInfo.bind(this, this.state.tempid)}>Update UserInfo</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Users className=\"container\" users={this.state.users} deleteUser={this.deleteUser} handleChange={this.handleChange} updateUser={this.updateUser} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}